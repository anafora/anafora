

Fifth data type: objects.

    Each piece of information we include in an object is known as a property: category label
    When we have more than one property, they are separated by commas.
    The last property does not end with a comma.

    Dot notation.
        ObjectName.PropertyName


    Bracket notation.
        ObjectName["PropertyName"]




    The new keyword creates an empty object when followed by Object().
    The general syntax is:
        var objectName = new Object();



    Methods are an important part of object oriented programming (OOP).
    Methods are similar to functions.
    Method is just like a function associated with an object.

    ex)

      var bob = new Object();
      bob.name = "Bob Smith";
      bob.age = 30;
      // this time we have added a method, setAge
      bob.setAge = function (newAge){
        bob.age = newAge;
      };

    We call a method like a function, but we use ObjectName.methodName()

        // here we define our method using "this", before we even introduce bob
          var setAge = function (newAge) {
            this.age = newAge;
          };

          bob.setAge(50);
            // works. This is an object in the outer environment.

    It turns out we can make a method work for many objects using a new keyword, this.
    The keyword this acts as a placeholder, and will refer to whichever object called that method when the method
    is actually used.

    Custom Constructors

        literal - this approach of adding in properties one at a time for every object is tedious!
        Instead of always using the boring Object constructor,

        we can make our own constructors.

        ex)
            function Person(name,age) {
              this.name = name;
              this.age = age;
            }

            // Let's make bob and susan again, using our constructor

                var bob = new Person("Bob Smith", 30);
                var susan = new Person("Susan Jordan", 25);

                // help us make george, whose name is "George Washington" and age is 275


                function Cat(age, color) {
                  this.age = age;
                  this.color = color;
                }

                // make a Dog constructor here

                function Dog(age, color, breed) {
                  this.age = age;
                  this.color = color;
                  this.breed = breed;
                }

                Why is this Cat constructor so cool?
                It means if we have many cats and wanted to create an object for each cat,
                we could just use this constructor with the properties already defined.

                This is much better than using the Object constructor which just gives us an empty object
                and needs us to define every property and value for each cat object we would create.

                In addition to making arrays of Objects, we can use objects as parameters for functions as well.
                That way, these functions can take advantage of the methods and properties that a certain object type
                provides.

                // Our person constructor
                    function Person (name, age) {
                      this.name = name;
                      this.age = age;
                    }

                // We can make a function which takes persons as arguments
                // This one computes the difference in ages between two people
                    var ageDifference = function(person1, person2) {
                      return person1.age - person2.age;
                    }

                    var alice = new Person("Alice", 30);
                    var billy = new Person("Billy", 25);

                // get the difference in age between alice and billy using our function
                    var diff = ageDifference(alice, billy);

                // 3 lines required to make harry_potter
                    var harry_potter = new Object();
                    harry_potter.pages = 350;
                    harry_potter.author = "J.K. Rowling";

                    // A custom constructor for book
                    function Book (pages, author) {
                        this.pages = pages;
                        this.author = author;
                    }

                // Use our new constructor to make the_hobbit in one line

                    var the_hobbit = new Book(320, "J.R.R.Tolkien");

    Methods

        Methods are like functions that are associated with a particular object.

        They are especially helpful when you want to either:

        Update the object properties

            or

        Calculate something based on an object's properties.

            Finding that Special Someone
                Let's say we're looking for someone in our address book with a specific last name.

                We can do this with a technique for searching arrays called "linear search".
                With it, we use a loop to check through all of the items in the array one-by-one
                until we see the item that we want.
