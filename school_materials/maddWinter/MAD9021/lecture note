native programming



    there is a container!
         much more efficient, faster, control your program better
         they only run on one platform

         file > new project > template > Visual C ++ > win32 // 32bit windows template
                    > 1. win32 console application, 2. win32 project
                    > ConsoleApplication > name it as myFirstCPPApp
                    > Next (not finish unless you are from Finland)
                    > wApplication, cApplication, DLL, Static library //DLL, Static library are for library
                                                                      // C++ has stronger way to protect
                                                                         your intellectual property
                    > select Console application, always check empty project and SDL should be turned on. // more robust security but for our education, get rid of it
                    > finish


                      ** why is 'visual' C++?
                            marketing purpose

         never change the folder name
         .sln // solution. this will be open in visual studio
         when you submit an assignment, you have to make a zip file with everything included.

         what is source code?

         what is text?
            >> word in text


         Source Files: what we are going to work on. right click > add > new item
                        > .cpp, .h // .h: intellectual property protection
                        > click code > select c++
                        > name it as main.cpp


               // to change font size > tools > options > fonts and colors // don't change color >
                                                          text editor > c/c++ > line numbers checked
                                                options > apply cut or copy commands to blank lines... checked off


         first program


         int main()     // function. It must have return type, legal name, and ().
         {
            return 0;
         }
         // all cpp programs must have main function.

         int main()
         {
            system("pause");  // press any key to continue
            return 0;
         }


         look at debug menu
            1. start debugging
            2. start without debugging

            >> we start it without debugging
                // press any key twice
                // F5 then press key once


         #include<iostream> // input and output: io.

         int main()
         {
            std::cout << "Up Yours!" << std::endl;    //console out
            system("pause");  // press any key to continue
            return 0;
         }

         #include<iostream> // input and output: io.

         using namespace std; // this enables us not to use std::

         int main()
         {
            cout << "Up Yours!" << endl;    //cout: console out   <<: it goes <- whay
            system("pause");  // press any key to continue
            return 0;
         }

         #include<iostream> // input and output: io.
         #include<string>

         using namespace std; // this enables us not to use std::

         int main()
         {
            cout << "Enter your name: ";

            string userName;

            cin >> userName;
            //I want to put something "in"

            cout << endl
                 <<"Hey, "
                 << userName
                 << "!!" <<
                 42 << endl;

            system("pause");
            return 0;
         }

         string London()
         {
            return "London"; // if 'return 43;' instead, then it will upset it

         }

         // functions can return only one return or nothing
